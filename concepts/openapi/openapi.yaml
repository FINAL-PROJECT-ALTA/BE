openapi: 3.0.2
info:
  title: Health Fit
  description: API Documentation
  contact:
    name: BE
    email: altaBE@mail.com
  version: '1.0'
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/aaryadewangga/Final_Project/1.0
  - url: https://aaryadewangga.cloud.okteto.net/{entity}
    variables:
      entity:
        default: users
        enum:
          - admin
          - users
          - users goals
          - users history
          - foods
          - menu
          - menu details
tags:
  - name: Admin
    description: Admin Register/Update/Delete
  - name: Users
    description: Users Register/Update/Delete
  - name: Users Goals
    description: Users Goals
  - name: User History
    description: User History of Foods/Goals
  - name: Foods
    description: Foods Methods
  - name: Menus
    description: Menu 
  - name: Menus Details
    description: Menu Detail 
paths:
  /admin/register:
    post:
      summary: Register New Admin
      tags:
        - Admin
      description: Get a New Account
      requestBody:
        required: true
        description: Create Account with valid schema
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                  format: password
                gender:
                  type: string
                  enum:
                    - Pria
                    - Wanita
              example:
                name: test
                email: test@mail.com
                password: test
                gender: Pria
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      user_uid: 
                        type: string
                      name:
                        type: string
                      email:
                        type: string
                      gender:
                        type: string
                        enum:
                          - Pria
                          - Wanita
                example:
                  code: 200
                  message: success to get new Account
                  data:
                    user_uid: jksfbkjfkjabruablnlab
                    name: test
                    email: test@mail.com
                    gender: Pria
        '400':
          $ref: '#/components/responses/400'
  /admin/login:
    post:
      tags:
        - Admin
      summary: Login admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: User terautorisasi
          content:
            application/json:
              schema:
                type: object
              example:
                code: 200
                message: Success login, get a new token
                data:
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        '500':
          description: Invalid Authorization
          content:
            application/json:
              schema:
                type: object
              example:
                code: 500
                message: There are something problem on server
                data:
  /users/register:
    post:
      summary: Register New Users
      tags:
        - Users
      description: Get a New Account
      requestBody:
        required: true
        description: Create Account with valid schema
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                  format: password
                gender:
                  type: string
                  enum:
                    - Pria
                    - Wanita
              example:
                name: test
                email: test@mail.com
                password: test
                gender: Pria
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      user_uid: 
                        type: string
                      name:
                        type: string
                      email:
                        type: string
                      gender:
                        type: string
                        enum:
                          - Pria
                          - Wanita
                example:
                  code: 200
                  message: success to get new Account
                  data:
                    user_uid: jksfbkjfkjabruablnlab
                    name: test
                    email: test@mail.com
                    gender: Pria
        '400':
          $ref: '#/components/responses/400'
  /users/login:
    post:
      tags:
        - Users
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: User terautorisasi
          content:
            application/json:
              schema:
                type: object
              example:
                code: 200
                message: Success login, get a new token
                data:
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        '500':
          description: Invalid Authorization
          content:
            application/json:
              schema:
                type: object
              example:
                code: 500
                message: There are something problem on server
                data:
  /users:
    get:
        summary: User Profile
        tags:
          - Users
        description: User Profile
        security:
          - bearerAuth: []
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    code:
                      type: integer
                      example: 200
                    message :
                      type: string
                      example: Success to get users profile
                    data:
                      type: object
                      properties:
                        user_uid:
                          type: string
                        name:
                          type: string
                        email:
                          type: string
                        password:
                          type: string
                          format: password
                        gender:
                          type: string
                          enum:
                            - Pria
                            - Wanita
                      example:
                          user_uid: jksfbkjfkjabruablnlab
                          name: test
                          email: test@test.com
                          gender: Pria
    put:
      summary: Update By ID
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/UserInput'
            example:
              name: Test Update
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessSingleResponse'
              example:
                code: 200
                message: Success to Update User Data
        '204':
          $ref: '#/components/responses/204'
    delete:
      tags:
        - Users
      summary: delete user data
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessSingleResponse'
              example:
                code: 200
                message: success to delete user data
  /users/goals:
    post:
      summary: Register New Goals For Users
      tags:
        - Users Goals
      description: Get a New Account
      security:
          - bearerAuth: []
      requestBody:
        required: true
        description: Create Account with valid schema
        content:
          application/json:
            schema:
              type: object
              properties:
                height:
                  type: integer
                weight:
                  type: integer
                age:
                  type: integer
                range_time:
                  type: integer
              example:
                height: 175
                weight: 75
                age: 24
                range_time: 30
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      user_uid: 
                        type: string
                      height:
                        type: integer
                      weight:
                        type: integer
                      age:
                        type: integer
                      range_time:
                        type: integer
                example:
                  id: 1
                  user_uid: kaehbiafbkajfl
                  height: 175
                  weight: 75
                  age: 24
                  range_time: 30
        '400':
          $ref: '#/components/responses/400'
  /users/goals/:goal_uid:  
    get:
        summary: Goals by User Profile
        tags:
          - Users Goals
        description: User Profile
        security:
          - bearerAuth: []
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    code:
                      type: integer
                      example: 200
                    message :
                      type: string
                      example: Success to get goals users profile
                    data:
                      type: object
                      properties:
                          id:
                            type: integer
                          user_uid: 
                            type: string
                          height:
                            type: integer
                          weight:
                            type: integer
                          age:
                            type: integer
                          range_time:
                            type: integer
                      example:
                          id: 1
                          user_uid: kaehbiafbkajfl
                          height: 175
                          weight: 75
                          age: 24
                          range_time: 30
    put:
      summary: Update By ID
      tags:
        - Users Goals
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/UserInput'
            example:
              height: 165
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessSingleResponse'
              example:
                code: 200
                message: Success to Update Goals User Data
        '204':
          $ref: '#/components/responses/204'
    delete:
      tags:
        - Users Goals
      summary: delete goals user data
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessSingleResponse'
              example:
                code: 200
                message: success to delete goals user data
  /users/history:
    get:
        summary: History by User Profile
        tags:
          - User History
        description: User Profile
        security:
          - bearerAuth: []
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    code:
                      type: integer
                      example: 200
                    message :
                      type: string
                      example: Success to get users history
                    data:
                      type: object
                      example:
                          code: 201
                          message: success to get users history
                          data:
                            id: 1
                            user_uid: jabfkanflabe
                            menu_category: breakfast
                            created_at: 07:32:32
                            menu:
                              - id : 3
                                food_uid: kshefkaefk
                                name: Nasi Goreng
                                calories: 244
                                category: foods
                                image: Nasi_images.jpg (image using form-data for uplaod)
                              - id : 6
                                food_uid: kjnlvanlfwf
                                name: Mie Ayam
                                calories: 143
                                category: foods
                                image: nasi-campur_images.jpg (image using form-data for uplaod)
  /foods:
    post:
      summary: Add / Create Foods Data
      tags:
        - Foods
      requestBody:
        required: true
        description: Create / Add Foods Data
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                calories:
                  type: integer
                category:
                  type: string
                  enum:
                    - fruit
                    - drink
                    - junk food
                    - food
                    - snack
                image :
                  type: string
              example:
                name: Soto Ayam
                calories: 244
                category: foods
                image: soto_images.jpg (image using form-data for uplaod)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      calories:
                        type: integer
                      category:
                        type: string
                        enum:
                          - fruit
                          - drink
                          - junk food
                          - food
                          - snack
                      image :
                        type: string
                example:
                  code: 201
                  message: sukses menambahkan foods baru
                  data:
                    id : 1
                    food_uid: kshefkaefk
                    name: Soto Ayam
                    calories: 244
                    category: foods
                    image: soto_images.jpg (image using form-data for uplaod)
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'  
    get:
      summary: Get All Foods
      tags:
        - Foods
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                             type: integer
                          name:
                            type: string
                          calories:
                            type: integer
                          category:
                            type: string
                            enum:
                              - fruit
                              - drink
                              - junk food
                              - food
                              - snack
                          image :
                            type: string
                example:
                    code: 200
                    message: success to get all foods
                    data:
                      - id : 1
                        food_uid: kshefkaefk
                        name: Soto Ayam
                        calories: 244
                        category: foods
                        image: soto_images.jpg (image using form-data for uplaod)
                      - id : 2
                        food_uid: kjnlvanlfwf
                        name: Nasi Campur
                        calories: 244
                        category: foods
                        image: nasi-campur_images.jpg (image using form-data for uplaod)
  /foods/search/:
    get:
      summary: Get Foods by Name or Calories
      description: http://aaryadewangga.cloud.okteto.net/foods/search?input=coba || 100 &category=name || calories
      tags:
        - Foods
      parameters:
        - name: Input calories
          in: query
          description: get food by calories
          required: true
          schema:
            type: integer
          example: {calories: 500}
        - name: Input name
          in: query
          description: get food by name
          required: true
          schema:
            type: string
          example: {name: banana}
      security:
         - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      calories:
                        type: integer
                      category:
                        type: string
                        enum:
                          - fruit
                          - drink
                          - junk food
                          - food
                          - snack
                      image :
                        type: string
                example:
                  code: 200
                  message: Berhasil mendapatkan data foods
                  data:
                    id : 1
                    food_uid: kshefkaefk
                    name: Soto Ayam
                    calories: 244
                    category: foods
                    image: soto_images.jpg (image using form-data for uplaod)
  /foods/:food_uid:  
    put:
      summary: Update Foods Data
      tags:
        - Foods
      parameters:
        - name: id
          in: path
          description: Foods UID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: Update Foods Data
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: integer
                calories:
                  type: string
              example:
                name: Bakso
                calories: 312 
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      calories:
                        type: integer
                      category:
                        type: string
                        enum:
                          - fruit
                          - drink
                          - junk food
                          - food
                          - snack
                      image :
                        type: string
                example:
                  code: 200
                  message: Berhasil mengupdate data foods
                  data:
                    id : 1
                    food_uid: kshefkaefk
                    name: Bakso
                    calories: 312
                    category: foods
                    image: soto_images.jpg (image using form-data for uplaod)
        '400':
          $ref: '#/components/responses/400'
        '401':
          description: Authorization Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
              example:
                  code: 401
                  message: Failed User Authorization
                  data:
    delete:
      summary: Delete Foods
      tags:
        - Foods
      parameters:
        - name: id
          in: path
          description: ID Rooms
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                code: 200
                message: success to delete foods
                data:
  /menus:
    post:
      summary: Add / Create Menus Data
      tags:
        - Menus
      requestBody:
        required: true
        description: Create / Add Menus Data
        content:
          application/json:
            schema:
              type: object
              properties:
                menu_categories:
                  type: string
                  enum:
                    - breakfast
                    - lunch
                    - dinner
                total_calories:
                  type: integer
              example:
                menu_categories: breakfast
                total_calories: 1000  
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      menu_uid:
                        type: string
                      menu_category:
                        type: string
                        enum:
                          - breakfast
                          - lunch
                          - dinner
                      total_calories:
                        type: integer
                      foods :
                        type: object
                example:
                  code: 201
                  message: sukses menambahkan menu baru
                  data:
                    id : 1
                    menu_uid: kshefkaefk
                    menu_category: breakfast
                    total_calories: 1000
                    foods: 
                    - id : 3
                      food_uid: kshefkaefk
                      name: Soto Ayam
                      calories: 356
                      category: foods
                      image: soto_images.jpg (image using form-data for uplaod)
                    - id : 7
                      food_uid: kjnlvanlfwf
                      name: Nasi Campur
                      calories: 392
                      category: foods
                      image: nasi-campur_images.jpg (image using form-data for uplaod)
                    - id : 8
                      food_uid: ehbfkablfnan
                      name: Es Campur
                      calories: 196
                      category: drink
                      image: es-campur_images.jpg (image using form-data for uplaod)
                    - id : 10
                      food_uid: ehblfnlebukvbe
                      name: Es Teh
                      calories: 100
                      category: drink
                      image: es-teh_images.jpg (image using form-data for uplaod)
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /menus/:menus_uid:
    put:
      summary: Update Menus Data
      tags:
        - Menus
      parameters:
        - name: menus_uid
          in: path
          description: menus_uid
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        description: Update Menus Data
        content:
          application/json:
            schema:
              type: object
              properties:
                menu_uid:
                  type: string
                menu_categories:
                  type: string
                  enum:
                    - breakfast
                    - lunch
                    - dinner
                total_calories:
                  type: integer
              example:
                menu_uid: kshefkaefk
                menu_categories: dinner
                total_calories: 2000  
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      menu_uid:
                        type: string
                      menu_category:
                        type: string
                        enum:
                          - breakfast
                          - lunch
                          - dinner
                      total_calories:
                        type: integer
                      foods :
                        type: object
                example:
                  code: 201
                  message: sukses mengubah data menu
                  data:
                    id : 1
                    menu_uid: kshefkaefk
                    menu_category: dinner
                    total_calories: 2000
                    foods: 
                    - id : 3
                      food_uid: kshefkaefk
                      name: Soto Ayam
                      calories: 356
                      category: foods
                      image: soto_images.jpg (image using form-data for uplaod)
                    - id : 7
                      food_uid: kjnlvanlfwf
                      name: Nasi Campur
                      calories: 392
                      category: foods
                      image: nasi-campur_images.jpg (image using form-data for uplaod)
                    - id : 8
                      food_uid: ehbfkablfnan
                      name: Es Campur
                      calories: 196
                      category: drink
                      image: es-campur_images.jpg (image using form-data for uplaod)
                    - id : 10
                      food_uid: ehblfnlebukvbe
                      name: Es Teh
                      calories: 100
                      category: drink
                      image: es-teh_images.jpg (image using form-data for uplaod)
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete Menus
      tags:
        - Menus
      parameters:
        - name: menus_uid
          in: path
          description: menus_uid
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                code: 200
                message: success to delete menus
                data:
  /menus/categories:  
    get:
      summary: Get Menu By Menu Category
      tags:
        - Menus
      requestBody:
        required: true
        description: Create / Add Menus Data
        content:
          application/json:
            schema:
              type: object
              properties:
                menu_categories:
                  type: string
                  enum:
                    - breakfast
                    - lunch
                    - dinner
                total_calories:
                  type: integer
              example:
                menu_categories: breakfast
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      menu_uid:
                        type: string
                      menu_category:
                        type: string
                        enum:
                          - breakfast
                          - lunch
                          - dinner
                      total_calories:
                        type: integer
                      foods :
                        type: object
                example:
                  code: 201
                  message: sukses menambahkan menu baru
                  data:
                  - id : 1
                    menu_uid: kshefkaefk
                    menu_category: breakfast
                    total_calories: 1000
                    foods: 
                    - id : 3
                      food_uid: kshefkaefk
                      name: Soto Ayam
                      calories: 356
                      category: foods
                      image: soto_images.jpg (image using form-data for uplaod)
                    - id : 7
                      food_uid: kjnlvanlfwf
                      name: Nasi Campur
                      calories: 392
                      category: foods
                      image: nasi-campur_images.jpg (image using form-data for uplaod)
                    - id : 8
                      food_uid: ehbfkablfnan
                      name: Es Campur
                      calories: 196
                      category: drink
                      image: es-campur_images.jpg (image using form-data for uplaod)
                    - id : 10
                      food_uid: ehblfnlebukvbe
                      name: Es Teh
                      calories: 100
                      category: drink
                      image: es-teh_images.jpg (image using form-data for uplaod)     
                  - id : 2
                    menu_uid: kshefkaefk
                    menu_category: breakfast
                    total_calories: 1500
                    foods: 
                    - id : 10
                      food_uid: kshefkaefk
                      name: Soto Ayam
                      calories: 453
                      category: foods
                      image: soto_images.jpg (image using form-data for uplaod)
                    - id : 18
                      food_uid: kjnlvanlfwf
                      name: Nasi Campur
                      calories: 392
                      category: foods
                      image: nasi-campur_images.jpg (image using form-data for uplaod)
                    - id : 21
                      food_uid: ehbfkablfnan
                      name: Es Campur
                      calories: 196
                      category: drink
                      image: es-campur_images.jpg (image using form-data for uplaod)
                    - id : 26
                      food_uid: ehblfnlebukvbe
                      name: Es Teh
                      calories: 221
                      category: drink
                      image: es-teh_images.jpg (image using form-data for uplaod)     
  /menus/calories:  
    get:
      summary: Get Menu By Total Calories
      tags:
        - Menus
      requestBody:
        required: true
        description: Create / Add Menus Data
        content:
          application/json:
            schema:
              type: object
              properties:
                menu_categories:
                  type: string
                  enum:
                    - breakfast
                    - lunch
                    - dinner
                total_calories:
                  type: integer
              example:
                total_calories: 1500
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      menu_uid:
                        type: string
                      menu_category:
                        type: string
                        enum:
                          - breakfast
                          - lunch
                          - dinner
                      total_calories:
                        type: integer
                      foods :
                        type: object
                example:
                  code: 201
                  message: sukses menambahkan menu baru
                  data:
                  - id : 2
                    menu_uid: kshefkaefk
                    menu_category: breakfast
                    total_calories: 1500
                    foods: 
                    - id : 10
                      food_uid: kshefkaefk
                      name: Soto Ayam
                      calories: 453
                      category: foods
                      image: soto_images.jpg (image using form-data for uplaod)
                    - id : 18
                      food_uid: kjnlvanlfwf
                      name: Nasi Campur
                      calories: 392
                      category: foods
                      image: nasi-campur_images.jpg (image using form-data for uplaod)
                    - id : 21
                      food_uid: ehbfkablfnan
                      name: Es Campur
                      calories: 196
                      category: drink
                      image: es-campur_images.jpg (image using form-data for uplaod)
                    - id : 26
                      food_uid: ehblfnlebukvbe
                      name: Es Teh
                      calories: 221
                      category: drink
                      image: es-teh_images.jpg (image using form-data for uplaod)
  /menus/detail:
    post:
      summary: Create Menus Details
      tags:
        - Menus Details
      description: Create Menus Details
      security:
          - bearerAuth: []
      requestBody:
        required: true
        description: Create Menus Details with valid schema
        content:
          application/json:
            schema:
              type: object
              properties:
                user_uid:
                  type: string
                menu_uid:
                  type: string
              example:
                user_uid: jabfkanflabe
                menu_uid: fkeabflnalef
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      user_uid: 
                        type: string
                      menu_uid:
                        type: string
                example:
                  code: 201
                  message: sukses menambahkan menu baru
                  data:
                    id: 1
                    user_uid: jabfkanflabe
                    menu_uid: fkeabflnalef
                    menu:
                      - id : 3
                        food_uid: kshefkaefk
                        name: Nasi Goreng
                        calories: 244
                        category: foods
                        image: Nasi_images.jpg (image using form-data for uplaod)
                      - id : 6
                        food_uid: kjnlvanlfwf
                        name: Mie Ayam
                        calories: 143
                        category: foods
                        image: nasi-campur_images.jpg (image using form-data for uplaod)
        '400':
          $ref: '#/components/responses/400'
    get:
        summary: Get Menus Details
        tags:
          - Menus Details
        description: User Profile
        security:
          - bearerAuth: []
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    code:
                      type: integer
                      example: 200
                    message :
                      type: string
                      example: Success to get goals users profile
                    data:
                      type: object
                      properties:
                          id:
                            type: integer
                          user_uid: 
                            type: string
                          height:
                            type: integer
                          weight:
                            type: integer
                          age:
                            type: integer
                          range_time:
                            type: integer
                      example:
                          code: 200
                          message: sukses menambahkan menu baru
                          data:
                            id: 1
                            user_uid: jabfkanflabe
                            menu_uid: fkeabflnalef
                            menu:
                              - id : 3
                                food_uid: kshefkaefk
                                name: Nasi Goreng
                                calories: 244
                                category: foods
                                image: Nasi_images.jpg (image using form-data for uplaod)
                              - id : 6
                                food_uid: kjnlvanlfwf
                                name: Mie Ayam
                                calories: 143
                                category: foods
                                image: nasi-campur_images.jpg (image using form-data for uplaod)
components:
  parameters:
    UserID:
      name: id
      in: path
      required: true
      schema:
        type: integer
  schemas:
    UserLogin:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: test@mail.com
        password: test
    UserInput:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
    SuccessSingleResponse:
      type: object
      properties:
        code:
          type: integer
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/UserInput'
  responses:
    '204':
      description: Failed to Update
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 204
              message:
                type: string
                example: No data for Update
              data:
                type: object
                example: 
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
              data:
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
            example:
              code: 400
              message: Invalid Input
              data:
    '401':
      description: Authorization Failed
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 401
              success:
                type: boolean
                example: false
              message:
                type: string
                example: invalid Email or password
              data:
                type: object
                example:
                  token: {}
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
              data:
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
            example:
              code: 500
              message: Something Error on Server
              data:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT